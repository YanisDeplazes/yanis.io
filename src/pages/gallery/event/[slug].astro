---
import Layout from '../../../layouts/Layout.astro';
import Gallery from '../../../components/sections/Gallery.astro';
import ContactSection from '../../../components/sections/Contact.astro';
import { events } from '../../../data/events.json';
import Image from '../../../assets/images/gallery/events/2024/04_Copenhagen/47.jpg';

export function getStaticPaths() {
  return events.map((event) => ({
    params: { slug: event.title.toLowerCase().replace(/\s+/g, '-') },
    props: { event },
  }));
}

// Get event data from props
const { event } = Astro.props;

function newestElement(): string {
  for (const item of event.content) {
    if (item.imageUrl) {
      return item.imageUrl;
    }
  }

  for (const item of event.content) {
    if (item.thumbnail) {
      return item.thumbnail;
    }
  }
  return Image.src;
}

const imageUrl = newestElement(); // Get the highest-numbered candid image

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/images/gallery/events/**/*.{jpg,jpeg,png,webp}',
);
// Convert `/images/` path into `/src/assets/images/`
const formattedImagePath = imageUrl.replace('/images/', '/src/assets/images/');
console.log(imageUrl);

if (!images[formattedImagePath]) {
  throw new Error(
    `"${formattedImagePath}" does not exist in import.meta.glob()`,
  );
}

// Import and resolve the image URL
const imageModule = await images[formattedImagePath]();
const image = imageModule.default;
---

<Layout
  title={event.title + ' ' + event.year + ' â€” Yanis Deplazes'}
  description={`Explore ${event.title} from ${event.year}`}
  imageSrc={image.src}
>
  {
    event.content ? (
      <Gallery
        galleryData={event.content}
        title={`${event.title}`}
        year={event.year}
      />
    ) : (
      <p class="no-images">No images available for this event.</p>
    )
  }
  <ContactSection />
</Layout>

<style lang="scss">
  .no-images {
    text-align: center;
    font-size: 1.2rem;
    color: #ccc;
    margin-top: 20px;
  }
</style>
