---
const { title, type, imageUrl, gifUrl, link } = Astro.props;

import C2a from './C2a.astro';
import HiddenLink from './HiddenLink.astro';
import { Image } from 'astro:assets';

// Import all images dynamically from `src/assets/images/projects/`
const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/images/projects/*.{jpg,jpeg,png,gif,webp}',
);

// Format paths to match imported files
const formattedImagePath = `/src/assets/${imageUrl}`;
const formattedGifPath = `/src/assets/${gifUrl}`;

// Load the images dynamically if they exist
const imageModule = images[formattedImagePath]
  ? await images[formattedImagePath]()
  : null;
const gifModule = images[formattedGifPath]
  ? await images[formattedGifPath]()
  : null;

// Extract the actual `ImageMetadata` object
const image = imageModule?.default || null;
const gif = gifModule?.default || null;
---

<article class="work-selected border radius">
  <div class="container">
    <span class="type color-dark letter-spacing font-size-small">{type}</span>

    <div class="title color-dark">
      <h3 class="button lato-bold font-size-5">{title}</h3>
      <C2a url={link} title={title} target="_blank" />
    </div>
  </div>
  <div class="image">
    {
      image ? (
        <Image src={image} alt={title} width={800} height={600} format="webp" />
      ) : (
        <p>Image not found</p>
      )
    }
  </div>

  <div class="video">
    {
      gif ? (
        <Image src={gif} alt={title} width={800} height={600} format="webp" />
      ) : (
        <p>GIF not found</p>
      )
    }
  </div>
  <HiddenLink url={link} title={title} target="_blank" />
</article>

<style lang="scss">
  $breakpoint-tablet: 768px;

  .work-selected {
    width: 100%;
    height: auto;
    aspect-ratio: 2 / 3;
    position: relative;
    overflow: hidden;
    cursor: pointer;

    @media (min-width: 768px) {
      width: auto;
      height: 100%;
    }

    .container {
      display: flex;
      flex-direction: column;
      position: relative;
      z-index: 1;
      gap: var(--space-2xs);
      padding: var(--padding-inner);
      height: -webkit-fill-available;
      align-items: stretch;
      justify-content: flex-end;
    }

    .title {
      display: flex;
      gap: var(--space-xs);
      justify-content: space-between;

      .button {
        margin: 0;
        background-color: white;
        padding: 0.5em 1em;
        border-radius: 40px;
        transition: all 0.3s ease-in;
      }
    }

    .type {
      flex: 0;
      background-color: rgba(255, 255, 255, 0.75);
      padding: 0.5em 1em;
      border-radius: 40px;
      backdrop-filter: blur(10px);
      width: fit-content;
    }

    .image,
    .video {
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      transition: 0.4s ease;
      filter: brightness(0.9);
      img {
        object-fit: cover;
        width: 100%;
        height: 100%;
      }
    }

    .image {
      transform: scale(1);
    }
    .video {
      opacity: 0;
      transform: scale(1.2);
    }
    @media (min-width: $breakpoint-tablet) {
      &:hover {
        .image {
          opacity: 0;
          transform: scale(1);
        }
        .video {
          opacity: 1;
          filter: brightness(0.6);
          transform: scale(1.2);
        }
        & .title {
          h3 {
            background-color: #101010;
            color: white;
          }
        }
      }
    }
  }
</style>
