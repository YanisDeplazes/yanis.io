---
const { title, year, types, link } = Astro.props;

const isExternal = link.startsWith('http://') || link.startsWith('https://');

import C2a from './C2a.astro';
import HiddenLink from './HiddenLink.astro';
---

<article class="work border">
  <div class="container">
    <div class="title color-dark">
      <span class="color-white lato-bold font-size-small">{year}</span>
      <h3 class="color-white lato-bold font-size-6">{title}</h3>
      <C2a
        link={link}
        title={title}
        target={isExternal ? '_blank' : undefined}
      />
    </div>
    <div class="tags">
      {
        types.map((type: string) => (
          <span class="tag color-white letter-spacing font-size-small">
            {type}
          </span>
        ))
      }
    </div>
  </div>

  <HiddenLink
    url={link}
    title={title}
    target={isExternal ? '_blank' : '_self'}
  />
</article>

<style lang="scss">
  $breakpoint-tablet: 768px;

  .work {
    position: relative;
    border-bottom: 0;
    border-left: 0;
    border-right: 0;

    .container {
      display: flex;
      justify-content: space-between;
      flex-direction: column-reverse;
      $breakpoint-tablet: 768px;
      row-gap: 0;
      column-gap: var(--space-s);
      padding-top: var(--space-m);
      @media (min-width: $breakpoint-tablet) {
        align-items: center;
        flex-direction: row;
        padding-top: 0;
      }
    }

    .title {
      display: flex;
      align-items: center;
      gap: var(--space-s);
    }

    .tags {
      display: flex;
      align-items: center;
      gap: var(--space-2xs);
      .tag {
        background-color: white;
        color: #101010;
        padding: 0.5em 1em;
        border-radius: 2em;

        @media (min-width: $breakpoint-tablet) {
          padding: 1em 2em;
        }
      }
    }
  }
</style>
